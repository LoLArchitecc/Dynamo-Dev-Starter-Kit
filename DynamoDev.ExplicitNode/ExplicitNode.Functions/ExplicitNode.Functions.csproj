<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Configurations>Debug;Debug One;Debug Revit;Debug One Revit;Release</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Please remove the targets you don't need in order
      to exclude Dynamo's versions your add-in won't support
      use the list below for matching Revit version with .NET target
              2.0  |  net46
              2.3  |  net471
              2.5  |  net472
              2.6  |  net48
      For example you can exclude Dynamo 2.0, by simply removing net45 target belows
      -->
    <TargetFrameworks>net46;net471;net472;net48</TargetFrameworks>
    <RuntimeIdentifiers>win</RuntimeIdentifiers>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug One'))">
    <!-- You could debug just ONE addin version,
         instead of building all the versions above.
         Just put ONE target from the list above
         e.g. if you want to debug ONLY Dynamo 2.5,
         put net472 below and switch to 'Debug One' configuration
      -->
    <TargetFrameworks>net472</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net46' ">
    <DynamoVersion>2.0</DynamoVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net471' ">
    <DynamoVersion>2.3</DynamoVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net472' ">
    <DynamoVersion>2.5</DynamoVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net48' ">
    <DynamoVersion>2.6</DynamoVersion>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Forcibly set platform to 'x64' and ignore architecture-related problems -->
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64</Platforms>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

    <!-- Force the project to use the legacy debugger engine -->
    <DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>

    <!-- Invert the behavior of new .csproj format - exclude files by default -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <EnableDefaultItems>false</EnableDefaultItems>

    <DynamoVersionSave>$([System.String]::Copy('$(DynamoVersion)').Replace('.', '_'))</DynamoVersionSave>

    <!-- Define handy symbols to use in the code in order to accommodate different Dynamo versions,
    e.g. by wrapping legacy / deprecated API calls with #if DYNAMO2_3 | DYNAMO2_5 -->
    <DefineConstants>DYNAMO$(DynamoVersionSave);WINFORMS</DefineConstants>
    <PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>

    <!-- Multiple targets can cause obj folder locking by concurrent builds -->
    <BuildInParallel>false</BuildInParallel>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
    <DebugType>full</DebugType>
    <OutputPath>..\bin\Debug\$(DynamoVersion)\$(Product)</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="WindowsBase" />  
    <Reference Include="System.Xaml.dll" />
  </ItemGroup>

  <ItemGroup Condition="$(DefineConstants.Contains('WINFORMS'))">
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="DynamoVisualProgramming.DynamoServices" Version="$(DynamoVersion).*" ExcludeAssets="runtime"/>
  </ItemGroup>

  <ItemGroup>
    <Compile Include="HelloDynamo.cs" />
  </ItemGroup>
</Project>



<!--<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
		<ProductVersion>8.0.30703</ProductVersion>
		<SchemaVersion>2.0</SchemaVersion>
		<ProjectGuid>$guid1$</ProjectGuid>
		<OutputType>Library</OutputType>
		<AppDesignerFolder>Properties</AppDesignerFolder>
		<RootNamespace>$saferootprojectname$.Functions</RootNamespace>
		<AssemblyName>$saferootprojectname$.Functions</AssemblyName>
		<TargetFrameworkVersion>v$targetframeworkversion$</TargetFrameworkVersion>
		<FileAlignment>512</FileAlignment>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<Optimize>false</Optimize>
		<OutputPath>bin\Debug\</OutputPath>
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<ErrorReport>prompt</ErrorReport>
		<WarningLevel>4</WarningLevel>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DebugType>pdbonly</DebugType>
 		<Optimize>true</Optimize>
		<OutputPath>bin\Release\</OutputPath>
		<DefineConstants>TRACE</DefineConstants>
		<ErrorReport>prompt</ErrorReport>
		<WarningLevel>4</WarningLevel>
	</PropertyGroup>
	<ItemGroup>
		<Reference Include="System"/>
		$if$ ($targetframeworkversion$ >= 3.5)
		<Reference Include="System.Core"/>
		<Reference Include="System.Xml.Linq"/>
		<Reference Include="System.Data.DataSetExtensions"/>
		$endif$
		$if$ ($targetframeworkversion$ >= 4.0)
		<Reference Include="Microsoft.CSharp"/>
 		$endif$
		<Reference Include="System.Data"/>
		<Reference Include="System.Xml"/>
	</ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="DynamoVisualProgramming.DynamoServices" version="$dynamoVersion$">
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
  </ItemGroup>
  
	<ItemGroup>
		<Compile Include="Functions.cs" />

		<Compile Include="Properties\AssemblyInfo.cs" />
	</ItemGroup>
  
	<Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  --><!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  --><!--
</Project>-->
